apiVersion: v1
kind: Service
metadata:
  namespace: hfbn
  name: rca-svc
spec:
  clusterIP: None
  selector:
    hfbn: rca
  ports:
  - name: rca-1
    port: 7054
    targetPort: 7054
  - name: rca-2
    port: 9443
    targetPort: 9443

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: hfbn
  name: rca
  labels:
    name: rca
spec:
  serviceName: rca-svc
  replicas: 1
  selector:
    matchLabels:
      hfbn: rca
  template:
    metadata:
      labels:
        hfbn: rca
    spec:
     affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - tmhfbn1
     tolerations:
       - key: "node-role.kubernetes.io/master"
         operator: "Exists"
         effect: "NoSchedule"
     volumes:
       - name: artifacts-storage
         persistentVolumeClaim:
             claimName: artifacts-claim
     restartPolicy: Always
     subdomain: rca-svc
     containers:
       - name: mrca
         image: hyperledger/fabric-ca:latest
         envFrom:
         - configMapRef:
             name: ca-config
         env: 
         - name:  BOOTSTRAP_USER_PASS
           value: rca.hf.m.io-admin:adminpw
         - name:  FABRIC_CA_SERVER_CSR_HOSTS
           value: rca-0.rca-svc.hfbn.svc.cluster.local
         - name:  FABRIC_CA_SERVER_CSR_CN
           value: rca-0.rca-svc.hfbn.svc.cluster.local
         - name:  TARGET_CERTFILE
           value: /data/ca-cert.pem
         - name: FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS
           value: "127.0.0.1:9443"
         command: ["/bin/bash"]
         args: ["-c", "/data/scripts/start-rca.sh"]
         ports:
           - containerPort: 7054
           - containerPort: 9443
         volumeMounts:
          - name: artifacts-storage
            mountPath: "/data"
     restartPolicy: Always
