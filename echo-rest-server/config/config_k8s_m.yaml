name: "m-rest-server-network"
#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: org1

  logging:
    level: info

  # Global configuration for peer, event service and orderer timeouts
  # if this this section is omitted, then default values will be used (same values as below)
  peer:
    timeout:
      connection: 30s
      response: 180s
#      discovery:
#        # Expiry period for discovery service greylist filter
#        # The channel client will greylist peers that are found to be offline
#        # to prevent re-selecting them in subsequent retries.
#        # This interval will define how long a peer is greylisted
#        greylistExpiry: 10s
#  eventService:
#    # Event service type (optional). If not specified then the type is automatically
#    # determined from channel capabilities.
#    type: (deliver|eventhub)
    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    # the values as they see fit in their config file
#    timeout:
#      connection: 15s
#      registrationResponse: 15s
#  orderer:
#    timeout:
#      connection: 15s
#      response: 15s
#  global:
#    timeout:
#      query: 180s
#      execute: 180s
#      resmgmt: 180s
#    cache:
#      connectionIdle: 30s
#      eventServiceIdle: 2m
#      channelConfig: 30m
#      channelMembership: 30s
#      discovery: 10s
#      selection: 10m

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ${GOPATH}/src/github.com/m/k8s-test/artifacts
    
  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    path: /tmp/m-rest-server-store

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      path: /tmp/m-rest-server-msp

   # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: false

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      keyfile:
      certfile:

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  m:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    # deprecated: not recommended, to override any orderer configuration items, entity matchers should be used.
    # orderers:
    #  - orderer.example.com

    # Required. list of peers from participating orgs
    peers:
      peer0.org1.hf.m.io:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

      peer1.org1.hf.m.io:
        endorsingPeer: false
        chaincodeQuery: false
        ledgerQuery: false
        eventSource: false
      peer2.org1.hf.m.io:
        endorsingPeer: false
        chaincodeQuery: false
        ledgerQuery: false
        eventSource: false

    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0

#
# list of participating organizations in this network
#
organizations:
  org1:
    mspid: org1.hf.m.io
    cryptoPath: peerOrganizations/org1.hf.m.io/users/{userName}/msp
    peers:
      - peer0.org1.hf.m.io
      - peer1.org1.hf.m.io
      - peer2.org1.hf.m.io

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ica.org1.hf.m.io

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer0.hf.m.io:
    url: orderer0-0.orderer0-svc.hfbn.svc.cluster.local:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer0-0.orderer0-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org0-ca-chain.pem

  orderer1.hf.m.io:
    url: orderer1-0.orderer1-svc.hfbn.svc.cluster.local:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer1-0.orderer1-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org0-ca-chain.pem

  orderer2.hf.m.io:
    url: orderer2-0.orderer2-svc.hfbn.svc.cluster.local:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer2-0.orderer2-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org0-ca-chain.pem

  orderer3.hf.m.io:
    url: orderer3-0.orderer3-svc.hfbn.svc.cluster.local:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer3-0.orderer3-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org0-ca-chain.pem

  orderer4.hf.m.io:
    url: orderer4-0.orderer4-svc.hfbn.svc.cluster.local:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer4-0.orderer4-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org0-ca-chain.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.org1.hf.m.io:
    # this URL is used to send endorsement and query requests
    url: peer0-0.peer0-svc.hfbn.svc.cluster.local:7051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: peer0-0.peer0-svc.hfbn.svc.cluster.local:7053

    grpcOptions:
      ssl-target-name-override: peer0-0.peer0-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org1-ca-chain.pem

  peer1.org1.hf.m.io:
    # this URL is used to send endorsement and query requests
    url: peer1-0.peer1-svc.hfbn.svc.cluster.local:7051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: peer1-0.peer1-svc.hfbn.svc.cluster.local:7053

    grpcOptions:
      ssl-target-name-override: peer1-0.peer1-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org1-ca-chain.pem

  peer2.org1.hf.m.io:
    # this URL is used to send endorsement and query requests
    url: peer2-0.peer2-svc.hfbn.svc.cluster.local:7051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: peer2-0.peer2-svc.hfbn.svc.cluster.local:7053

    grpcOptions:
      ssl-target-name-override: peer2-0.peer2-svc.hfbn.svc.cluster.local
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/org1-ca-chain.pem

certificateAuthorities:
  ica.org1.hf.m.io:
    url: ica.org1.hf.m.io:7055
    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    httpOptions:
      verify: false
    registrar:
      enrollId: ica.org1.hf.m.io-admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ica.org1.hf.m.io
    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/m/k8s-test/artifacts/ca-cert.pem

entityMatchers:
  peer:
    - pattern: (\w*)peer0.org1.hf.m.io(\w*)
      urlSubstitutionExp: peer0-0.peer0-svc.hfbn.svc.cluster.local:7051
      eventUrlSubstitutionExp: peer0-0.peer0-svc.hfbn.svc.cluster.local:7053
      sslTargetOverrideUrlSubstitutionExp: peer0-0.peer0-svc.hfbn.svc.cluster.local
      mappedHost: peer0.org1.hf.m.io

    - pattern: (\w*)peer1.org1.hf.m.io(\w*)
      urlSubstitutionExp: peer1-0.peer1-svc.hfbn.svc.cluster.local:7051
      eventUrlSubstitutionExp: peer1-0.peer1-svc.hfbn.svc.cluster.local:7053
      sslTargetOverrideUrlSubstitutionExp: peer1-0.peer1-svc.hfbn.svc.cluster.local
      mappedHost: peer1.org1.hf.m.io

    - pattern: (\w*)peer2.org1.hf.m.io(\w*)
      urlSubstitutionExp: peer2-0.peer2-svc.hfbn.svc.cluster.local:7051
      eventUrlSubstitutionExp: peer2-0.peer2-svc.hfbn.svc.cluster.local:7053
      sslTargetOverrideUrlSubstitutionExp: peer2-0.peer2-svc.hfbn.svc.cluster.local
      mappedHost: peer2.org1.hf.m.io

  orderer:
    - pattern: (\w*)orderer0.hf.m.io(\w*)
      urlSubstitutionExp: orderer0-0.orderer0-svc.hfbn.svc.cluster.local:7050
      sslTargetOverrideUrlSubstitutionExp: orderer0-0.orderer0-svc.hfbn.svc.cluster.local
      mappedHost: orderer0.hf.m.io

    - pattern: (\w*)orderer1.hf.m.io(\w*)
      urlSubstitutionExp: orderer1-0.orderer1-svc.hfbn.svc.cluster.local:7050
      sslTargetOverrideUrlSubstitutionExp: orderer1-0.orderer1-svc.hfbn.svc.cluster.local
      mappedHost: orderer1.hf.m.io

    - pattern: (\w*)orderer2.hf.m.io(\w*)
      urlSubstitutionExp: orderer2-0.orderer2-svc.hfbn.svc.cluster.local:7050
      sslTargetOverrideUrlSubstitutionExp: orderer2-0.orderer2-svc.hfbn.svc.cluster.local
      mappedHost: orderer2.hf.m.io
    
    - pattern: (\w*)orderer3.hf.m.io(\w*)
      urlSubstitutionExp: orderer3-0.orderer3-svc.hfbn.svc.cluster.local:7050
      sslTargetOverrideUrlSubstitutionExp: orderer3-0.orderer3-svc.hfbn.svc.cluster.local
      mappedHost: orderer3.hf.m.io
    
    - pattern: (\w*)orderer4.hf.m.io(\w*)
      urlSubstitutionExp: orderer4-0.orderer4-svc.hfbn.svc.cluster.local:7050
      sslTargetOverrideUrlSubstitutionExp: orderer4-0.orderer4-svc.hfbn.svc.cluster.local
      mappedHost: orderer4.hf.m.io

  certificateAuthorities:
    - pattern: (\w*)ca.org1.hf.m.io(\w*)
      urlSubstitutionExp: ica.org1.hf.m.io:7055
      mappedHost: ca.org1.hf.m.io
